{"version":3,"sources":["components/auth.js","components/private.route.js","components/Styles.js","components/Home.js","components/Login.js","components/Signup.js","components/dashboard/workout-list/history.js","components/dashboard/workout-list/WorkoutStyles.js","components/dashboard/workout-list/exercise-list/ExerciseList.js","components/dashboard/workout-list/WorkoutList.js","App.js","serviceWorker.js","index.js"],"names":["axiosWithAuth","token","localStorage","getItem","console","log","axios","create","headers","authorization","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","LoginSignup","styled","div","WelcomeTitle","MainContent","NavDiv","WholeDiv","Home","push","useHistory","onClick","className","Login","useState","username","password","isLoggedIn","creds","setCreds","handleChange","e","target","name","value","login","preventDefault","post","then","res","setItem","data","id","history","catch","err","style","textDecoration","path","onSubmit","htmlFor","type","placeholder","onChange","FormikSignup","withFormik","mapPropsToValues","email","validationSchema","Yup","shape","required","min","values","alert","JSON","stringify","handleSubmit","setStatus","response","errors","touched","status","setSignup","useEffect","signup","auth","customHistory","createBrowserHistory","WorkoutListDiv","WorkoutInfoDiv","WorkoutDiv","ButtonDiv","InputDiv","input","ListButton","button","ExerciseList","Workout","workout","index","completeWorkout","removeWorkout","editWorkout","isCompleted","text","icon","WorkoutForm","addWorkout","setValue","WorkoutList","workouts","setWorkouts","newWorkouts","splice","key","map","item","setState","library","add","faTrash","faCheck","faEdit","App","exact","Dashboard","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be199043.chunk.js","sourcesContent":["\nimport axios from 'axios';\n\nconst axiosWithAuth = () => {\n  const token = localStorage.getItem('token');\n  console.log('axiosWithAuth Running!')\n\n    return axios.create({\n      headers: {\n        authorization: token\n      }\n    });\n  };\n  export default axiosWithAuth;\n  ","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./auth\";\n\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (localStorage.getItem('token')) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","import styled from \"styled-components\";\n\nexport const LoginSignup= styled.div`\n  color: black;\n  font-size: 1rem;\n  margin-bottom: 0.75rem;\n  display: inline-block;\n`;\n\nexport const WelcomeTitle = styled(LoginSignup)`\n  color: #3700B3;\n  font-size: 2rem;\n`;\n\nexport const MainContent = styled.div`\n  display: flex;\n  width: 100vw;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport  const NavDiv = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 100vw;\n  margin: 0;\n`;\n\nexport const WholeDiv = styled.div`\n  padding: 15px;\n`;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { MainContent, NavDiv, LoginSignup } from \"./Styles.js\";\n\nfunction Home() {\n    const { push } = useHistory();\n\n    const routeToHome = () => {\n        console.log(\"Loading...\");\n        push(\"/login\");\n    };\n\n    const routeToSignup = () => {\n        console.log(\"Loading...\");\n        push(\"/sign-up\");\n    };\n    const routeToLogin = () => {\n        console.log(\"Loading...\");\n        push(\"/login\");\n    };\n    return (\n      <>\n        <NavDiv>\n          <LoginSignup onClick={routeToSignup}>Sign Up</LoginSignup>\n          <LoginSignup onClick={routeToLogin}>Login</LoginSignup>\n        </NavDiv>\n        \n        <MainContent>\n          <p>An Image will go here</p>\n          <button className=\"button\" onClick={routeToHome}>Login!</button>\n        </MainContent>\n      </>\n    );\n  }\n  \n  export default Home;","import React, { useState } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport auth from \"./auth\";\nimport axios from \"axios\";\nimport { LoginSignup, WelcomeTitle, MainContent, WholeDiv } from \"./Styles.js\";\nimport axiosWithAuth  from './auth';\n\nfunction Login(props)  {\n    console.log(props)\n    const [creds, setCreds] = useState({ username: '', password: '', isLoggedIn: false });\n    // const [loginStatus, setLoginStatus] = useState('');\n\n   \n    const handleChange = e => {\n        setCreds({ ...creds, [e.target.name]: e.target.value });\n    }\n\n    function login(e) {\n        e.preventDefault();\n        axios\n        // change axios with auth to axios | removed cors proxy https://cors-anywhere.herokuapp.com/\n            .post(`https://cors-anywhere.herokuapp.com/https://weightlifting-journal15.herokuapp.com/api/auth/login`, creds)\n            .then(res => {\n                console.log(`login response`, res);\n                localStorage.setItem('token', res.data.token);\n                localStorage.setItem('id', res.data.id);\n                // localStorage.setItem('userid', res.data.user.id) //may be called something different ***\n                // setLoginStatus('Success');\n                setCreds({\n                    username: '',\n                    password: '', \n                    isLoggedIn: true\n                })\n                props.history.push('/dashboard')\n            })\n            .catch(err => {\n                console.log(err);\n                // setLoginStatus(`${err}`);\n                setCreds({\n                    username: '',\n                    password: '',\n                    isLoggedIn: false\n                })\n            });\n    }\n\n    return (\n        <WholeDiv>\n            <Link style={{ textDecoration: \"none\" }} to=\"/sign-up\">\n                <LoginSignup>Sign Up</LoginSignup>\n            </Link>\n            <Route path=\"/sign-up\">\n                <Login />\n            </Route>\n            <br></br>\n            <MainContent>\n                <WelcomeTitle>{`Welcome back`}</WelcomeTitle>\n                <form onSubmit={login}>\n                    <label htmlFor=\"username\">username</label>\n                    <input\n                        id=\"username\"\n                        type=\"text\"\n                        placeholder=\"username\"\n                        name=\"username\"\n                        onChange={handleChange}\n                        value= {creds.username}\n                    />\n                    {/* {touched.username && errors.username && <p \n                    className=\"errors\">{errors.username}</p>} */}\n                    <label htmlFor=\"password\">password</label>\n                    <input\n                        id=\"password\"\n                        type=\"text\"\n                        placeholder=\"password\"\n                        name=\"password\"\n                        onChange={handleChange}\n                        value= {creds.password}\n\n                    />\n                    {/* {touched.password && errors.password && <p \n                    className=\"errors\">{errors.password}</p>} */}\n                    \n                    <button className=\"button\" type=\"submit\" onSubmit={login}>Enter</button>\n\n                </form>\n            </MainContent>\n        </WholeDiv>\n    );\n}\n\n// const FormikLogin = withFormik({\n//     mapPropsToValues({ username, password }){\n//         return {\n//             username: username || \" \",\n//             password: \" \"\n//         };\n//     },\n    // validationSchema: Yup.object().shape({\n    //     username: Yup.string().username('Invalid username address').required(),\n    //     password: Yup.string().required()\n    // }),\n    // handleSubmit(values, {setStatus}){\n    //     console.log(\"submitting\", values);\n    //     axios.post('https://reqres.in/api/users', values)\n    //     .then(res => {\n    //         console.log('success', res)\n    //         setStatus(res.data)\n    //     })\n    //     .catch(err => console.log(err.response));\n    // }\n\nexport default Login","import React, { useState, useEffect } from \"react\";\nimport { Route, Link, useHistory } from \"react-router-dom\";\nimport auth from \"./auth\";\nimport Login from \"./Login\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { LoginSignup, WelcomeTitle, MainContent, WholeDiv } from \"./Styles.js\";\n\nconst Signup = ({ errors, touched, status }) => {\n    const [signup, setSignup] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n      console.log(\"status has changed\", status);\n      status && setSignup(signup => [...signup, status]);\n    }, [status]);\n    return (\n        <WholeDiv>\n            <Link to=\"/login\">\n                <LoginSignup>Login</LoginSignup>\n            </Link>\n            <Route path=\"/login\">\n                <Login />\n            </Route>\n            <br></br>\n            <MainContent>\n            <WelcomeTitle>Become A Member!</WelcomeTitle>\n                <Form>\n                    <label htmlFor=\"email\">email</label>\n                    <Field\n                        id=\"email\"\n                        type=\"text\"\n                        placeholder=\"email\"\n                        name=\"email\"\n                    />\n                    {touched.email && errors.email && <p \n                    className=\"errors\">{errors.email}</p>}\n                    <label htmlFor=\"password\">password</label>\n                    <Field\n                        id=\"password\"\n                        type=\"text\"\n                        placeholder=\"password\"\n                        name=\"password\"\n                    />\n                    {touched.password && errors.password &&<p \n                    className=\"errors\">{errors.password}</p>}\n\n                    <button className=\"button\" type=\"submit\" onClick={() => {\n                        auth.login(() => {\n                            history.push(\"/dashboard\");\n                        });\n                    }} >Enter\n                    </button>\n                </Form>\n            </MainContent>\n        </WholeDiv>\n    );\n}\n\nconst FormikSignup = withFormik({\n    mapPropsToValues({ email, password }){\n        return {\n            email: email || \"\",\n            password: \"\"\n        };\n    },\n    validationSchema: Yup.object().shape({\n        email: Yup.string().email('Invalid email address').required(),\n        password: Yup.string().min(5, 'Must be at leat 5 characters long').required()\n    }),\n    onSubmit: values => {\n        alert(JSON.stringify(values, null, 2));\n      },\n    handleSubmit(values, {setStatus}){\n        console.log(\"submitting\", values);\n        axios.post('https://reqres.in/api/users', values)\n        .then(res => {\n            console.log('success', res)\n            setStatus(res.data)\n        })\n        .catch(err => console.log(err.response));\n    }\n})(Signup);\nexport default FormikSignup;","import createBrowserHistory from 'history/createBrowserHistory'\n\nconst customHistory = createBrowserHistory()\nexport default customHistory;","import styled from \"styled-components\";\n\nexport const WorkoutListDiv = styled.div`\n    background: #fff;\n    padding: 10px;\n    width: 100vw;\n`;\n\nexport const WorkoutInfoDiv = styled.div`\n    box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.25);\n    border-radius: 4px;\n    width: 100%;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nexport const WorkoutDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n    background: #fff;\n    padding: 3px 0px;\n    font-size: 12px;\n    margin-bottom: 6px;\n    border-radius: 3px;\n    font-size: 1rem;\n    margin-bottom: 10px;\n\n`;\n\nexport const ButtonDiv = styled.div`\n    cursor: pointer;\n    width: 48%;\n    display: flex;\n    justify-content: space-between;\n    margin: 3px 0;\n`;\n\nexport const InputDiv = styled.input`\n    width: 100%;\n`;\n\nexport const ListButton = styled.button`\n    padding: 1px 10px;\n    margin: 0 10px;\n    background-color: #6200EE;\n    color: white;\n    border: 1px solid #6200EE;\n    border-radius: 5px;\n    font-size: 1.2rem;\n`;","import React, { useState} from 'react';\n\nconst ExerciseList = () => {\n    return (\n        <h1>Hello World</h1>\n    );\n}\n\nexport default ExerciseList;","import React, { useState} from 'react';\nimport history from \"./history.js\";\nimport { Router, Route } from \"react-router-dom\";\nimport { WorkoutInfoDiv, WorkoutListDiv, WorkoutDiv, ButtonDiv, ListButton, InputDiv} from \"./WorkoutStyles\";\nimport ExerciseList from \"./exercise-list/ExerciseList\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst Workout = ({workout, index, completeWorkout, removeWorkout, editWorkout }) => {\n \n  return(\n    <>\n      <Router history={history}>\n        <Route path=\"/exercise-list\" component={ExerciseList} />\n      </Router>\n\n      <WorkoutInfoDiv style={{textDecoration: workout.isCompleted ? 'line-through' : ''}}>\n        <button onClick={() => history.push('/exercise-list')} >{workout.text}</button>\n        <ButtonDiv>\n          <ListButton onClick={() => editWorkout(index)} icon=\"edit\">\n            <FontAwesomeIcon icon=\"edit\"/>\n          </ListButton>\n          <ListButton onClick={() => completeWorkout(index)} icon=\"trash\">\n            <FontAwesomeIcon icon=\"check\"/>\n          </ListButton>\n          <ListButton onClick={() => removeWorkout(index)}>\n            <FontAwesomeIcon icon=\"trash\"/>\n          </ListButton>\n        </ButtonDiv>\n      </WorkoutInfoDiv>\n\n    </>\n  );\n}\n\nfunction WorkoutForm({ addWorkout }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addWorkout(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputDiv\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nconst WorkoutList = () => {\n    const [workouts, setWorkouts] = useState([\n      {\n        text: \"Test Workout #1\",\n        isCompleted: false\n      },\n      {\n        text: \"Test Workout #2\",\n        isCompleted: false\n      },\n      {\n        text: \"Test Workout #3\",\n        isCompleted: false\n      }\n    ]);\n\n    const addWorkout = text => {\n      const newWorkouts = [...workouts, { text }];\n      setWorkouts(newWorkouts);\n    };\n  \n    const completeWorkout = index => {\n      const newWorkouts = [...workouts];\n      newWorkouts[index].isCompleted = true;\n      setWorkouts(newWorkouts);\n    };\n  \n    const removeWorkout = index => {\n      const newWorkouts = [...workouts];\n      newWorkouts.splice(index, 1);\n      setWorkouts(newWorkouts);\n    };\n\n    const editWorkout = (text, key) => {\n      \n      const newWorkouts = [...workouts];\n      newWorkouts.map(item=>{      \n        if(item.key===key){\n          console.log(item.key +\"\"+key)\n          item.text = text;\n        }\n      })\n      this.setState({\n        newWorkouts: newWorkouts\n      }) \n      setWorkouts(newWorkouts);\n    };\n\n    return(\n      <WorkoutListDiv>\n        <WorkoutDiv>\n            {workouts.map((workout, index) => (\n              <Workout key={index} index={index} workout={workout} completeWorkout={completeWorkout} removeWorkout={removeWorkout} editWorkout={editWorkout}/>\n            ))}\n            <WorkoutForm addWorkout={addWorkout} />\n        </WorkoutDiv>\n      </WorkoutListDiv>\n    );\n}\n\nexport default WorkoutList;","import React from \"react\";\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport { PrivateRoute } from \"./components/private.route\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport \"./App.css\"\nimport WorkoutList from \"./components/dashboard/workout-list/WorkoutList\";\nimport ExerciseList from \"./components/dashboard/workout-list/exercise-list/ExerciseList\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash, faCheck, faEdit } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faTrash, faCheck, faEdit);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>\n          <Link className=\"Journal-title\" to=\"/\">\n            <h1>Weight Lifting Journal</h1>\n          </Link>\n      </nav>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route className=\"SignUpBtn\" path=\"/sign-up\">\n          <Signup />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n\n        <Route>\n          <WorkoutList />\n        </Route>\n        <Route>\n          <ExerciseList />\n        </Route>\n        <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}